apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: dashboard
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: dashboard
  spec:
    source:
      type: Git
      git:
        uri: "https://github.com/rhoar-ci/dashboard"
        ref: master
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: DockerImage
          name: "registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift:latest"
    output:
      to:
        kind: ImageStreamTag
        name: "dashboard:latest"
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: dashboard
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: dashboard
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: dashboard
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: dashboard
    labels:
      app: dashboard
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: dashboard
      spec:
        serviceAccountName: dashboard
        containers:
        - name: dashboard
          image: "dashboard:latest"
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
          env:
            - name: UPLOAD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: upload-secret
                  key: token
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        from:
          kind: ImageStreamTag
          name: "dashboard:latest"
        containerNames:
        - dashboard
- apiVersion: v1
  kind: Service
  metadata:
    name: dashboard
    labels:
      app: dashboard
  spec:
    selector:
      app: dashboard
    type: ClusterIP
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
- apiVersion: v1
  kind: Route
  metadata:
    name: dashboard
    labels:
      app: dashboard
  spec:
    to:
      kind: Service
      name: dashboard
    port:
      targetPort: 8080
